basePath: /
definitions:
  handlers.URLProcessResponse:
    properties:
      cleaned_url:
        type: string
      domain:
        type: string
      original_url:
        type: string
      path:
        type: string
      query:
        type: string
    type: object
  models.Book:
    properties:
      author:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  models.CreateBookRequest:
    properties:
      author:
        type: string
      title:
        type: string
      year:
        maximum: 2034
        minimum: 1000
        type: integer
    required:
    - author
    - title
    - year
    type: object
  models.URLProcessRequest:
    properties:
      url:
        type: string
    required:
    - url
    type: object
  models.UpdateBookRequest:
    properties:
      author:
        type: string
      title:
        type: string
      year:
        maximum: 2034
        minimum: 1000
        type: integer
    required:
    - author
    - title
    - year
    type: object
host: localhost:8080
info:
  contact: {}
  description: A simple book library management API with UUID support
  title: Book Library API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get all books from the library
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the library
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book from the library
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get a single book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update an existing book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a book
      tags:
      - books
  /process-url:
    post:
      consumes:
      - application/json
      description: Process a URL and return cleaned version with components
      parameters:
      - description: URL to process
        in: body
        name: url
        required: true
        schema:
          $ref: '#/definitions/models.URLProcessRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.URLProcessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Process and cleanup URL
      tags:
      - utils
swagger: "2.0"
